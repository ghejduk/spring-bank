<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="it.softwarelabs.bank.application"/>
    <context:property-placeholder location="classpath:db/jdbc.properties"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="it.softwarelabs.bank.domain">
        <context:include-filter type="annotation" expression="it.softwarelabs.bank.domain.stereotype.Factory"/>
        <context:include-filter type="annotation" expression="it.softwarelabs.bank.domain.stereotype.Service"/>
    </context:component-scan>

    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate/hibernate.cfg.xml"/>
    </bean>

    <bean id="bookTransaction" class="it.softwarelabs.bank.domain.transaction.BookTransaction">
        <constructor-arg ref="hibernateAccountRepository"/>
        <constructor-arg ref="hibernateTransactionRepository"/>
    </bean>

    <bean id="registerUser" class="it.softwarelabs.bank.domain.user.RegisterUser">
        <constructor-arg ref="BCryptEncoder"/>
        <constructor-arg ref="userFactory"/>
        <constructor-arg ref="hibernateUserRepository"/>
    </bean>
</beans>